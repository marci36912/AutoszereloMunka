@page "/munkak"
@using Autoszerelo.DataClasses
@using Autoszerelo.UI.Services
@inject Autoszerelo.UI.Services.Interfaces.IMunkaService MunkaService

<PageTitle>Munkak</PageTitle>
<h3 class="text-center my-2">Regisztralt munkak listaja</h3>

@if (Jobs is null)
{
    @if (hasNotLoaded)
    {
        <p>Betoltes alatt...</p>
    }
    else
    {
        <p>Nincs megjelenitheto munka.</p>
    }
}
else
{
    <div class="table-responsive-xl">
    <table class="table table-hover">
        <thead>
            <tr>
                <th scope="col"></th>
                <th scope="col">
                        <button class="btn" @onclick="SortKategoria">Munka kategoria</button>
                </th>
                <th scope="col">
                        <button class="btn" @onclick="SortSulyossag">Hiba sulyossaga</button>
                </th>
                <th scope="col">
                        <button class="btn" @onclick="SortLeiras">Hiba leirasa</button>
                    </th>
                <th scope="col">
                        <button class="btn" @onclick="SortRendszam">Jarmu rendszama</button>
                </th>
                <th scope="col">
                        <button class="btn" @onclick="SortEv">Jarmu gyartasi eve</button>
                    </th>
                <th scope="col">
                        <button class="btn" @onclick="SortAllapot">Munka allapota</button>
                    </th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var job in Jobs)
            {
                index++;
                <tr>
                    <td scope="row">@index</td>
                    <td>@job.MunkaKategoria</td>
                    <td>@job.HibaSulyossaga</td>
                    <td>@job.HibaRovidLeirasa</td>
                    <td>@job.Rendszam</td>
                    <td>@job.GyartasiEv</td>
                    <td>@job.MunkaAllapot</td>
                    <td class="text-end"><a href="/munka/@job.MunkaAzonosito" class="btn btn-primary">Reszletek</a></td>
                </tr>
            }
        </tbody>
    </table>
    </div>
}

@code {
    private int index = 0;
    private IEnumerable<Munka>? Jobs { get; set; }
    private bool hasNotLoaded = true;

    protected override async Task OnInitializedAsync()
    {
        Jobs = await MunkaService.GetAllAsync();
        hasNotLoaded = false;
    }
    #region sorting
    private bool sortedKategoria = true;
    private void SortKategoria()
    {
        if (sortedKategoria)
        {
            Jobs = Jobs.OrderBy(x => x.MunkaKategoria).ToList();
        }
        else
        {
            Jobs = Jobs.OrderByDescending(x => x.MunkaKategoria).ToList();
        }

        sortedKategoria = !sortedKategoria;
        index = 0;
    }

    private bool sortedSuly = true;
    private void SortSulyossag()
    {
        if(sortedSuly)
        {
            Jobs = Jobs.OrderBy(x => x.HibaSulyossaga).ToList();
        }
        else
        {
            Jobs = Jobs.OrderByDescending(x => x.HibaSulyossaga).ToList();
        }

        sortedSuly = !sortedSuly;
        index = 0;
    }

    private bool sortedLeiras = true;
    private void SortLeiras()
    {
        if (sortedLeiras)
        {
            Jobs = Jobs.OrderBy(x => x.HibaRovidLeirasa).ToList();
        }
        else
        {
            Jobs = Jobs.OrderByDescending(x => x.HibaRovidLeirasa).ToList();
        }

        sortedLeiras = !sortedLeiras;
        index = 0;
    }

    private bool sortedRendszam = true;
    private void SortRendszam()
    {
        if (sortedRendszam)
        {
            Jobs = Jobs.OrderBy(x => x.Rendszam).ToList();
        }
        else
        {
            Jobs = Jobs.OrderByDescending(x => x.Rendszam).ToList();
        }

        sortedRendszam = !sortedRendszam;
        index = 0;
    }

    private bool sortedEv = true;
    private void SortEv()
    {
        if (sortedEv)
        {
            Jobs = Jobs.OrderBy(x => x.GyartasiEv).ToList();
        }
        else
        {
            Jobs = Jobs.OrderByDescending(x => x.GyartasiEv).ToList();
        }

        sortedEv = !sortedEv;
        index = 0;
    }

    private bool sortedAllapot = true;
    private void SortAllapot()
    {
        if (sortedAllapot)
        {
            Jobs = Jobs.OrderBy(x => x.MunkaAllapot).ToList();
        }
        else
        {
            Jobs = Jobs.OrderByDescending(x => x.MunkaAllapot).ToList();
        }

        sortedAllapot = !sortedAllapot;
        index = 0;
    }
    #endregion
}