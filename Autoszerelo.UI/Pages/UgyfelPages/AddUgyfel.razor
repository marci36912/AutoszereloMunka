@page "/ugyfel/add"
@using Autoszerelo.UI.Services.Interfaces
@using Autoszerelo.DataClasses
@inject IUgyfelService UgyfelService
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime

<PageTitle>Ugyfel felvetel</PageTitle>

<h3 class="text-center my-2">Uj ugyfel rogzitese</h3>
<EditForm Model="Costumer" OnValidSubmit="() => AddNewCostumer()">
    <DataAnnotationsValidator />
    <div class="form-group mb-3">
        <label class="form-label">Nev</label>
        <InputText @bind-Value="@Costumer.Nev" class="form-control" />
        <ValidationMessage For="() => Costumer.Nev" />
    </div>
    <div class="form-group mb-3">
        <label class="form-label">Email</label>
        <InputText @bind-Value="@Costumer.Email" class="form-control" />
        <ValidationMessage For="() => Costumer.Email" />
    </div>
    <div class="form-group mb-3">
        <label class="form-label">Lakcim</label>
        <InputText @bind-Value="@Costumer.Lakcim" class="form-control" />
        <ValidationMessage For="() => Costumer.Lakcim" />
    </div>

    <button class="btn btn-primary mb-3" type="submit">Adatok rogzitese</button>

</EditForm>

@code {
    private Ugyfel Costumer { get; set; } = new();

    private async Task AddNewCostumer()
    {
        var result = await UgyfelService.AddAsync(Costumer);
        if(result == System.Net.HttpStatusCode.OK)
        {
            await JsRuntime.InvokeVoidAsync("alert", "Az ugyfel adatai sikeresen rogzitesre kerultek!");
            NavigationManager.NavigateTo("/ugyfelek");
        }
        else
        {
            await JsRuntime.InvokeVoidAsync("alert", "Az ugyfel adatai sikeresen rogzitesre kerultek!");
        }
    }
}